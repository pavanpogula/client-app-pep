# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm --version
    - run: node --version
    - run: npm i
    - run: npm run build

    - name: Build React App with Docker image
      if: github.ref == 'refs/heads/main'
      run: docker build --build-arg REACT_APP_BASE_URL='${{secrets.REACT_APP_BASE_URL}}' --build-arg REACT_APP_SECRET='${{secrets.REACT_APP_SECRET}}' --build-arg REACT_APP_URL='${{secrets.REACT_APP_URL}}'  -t '${{secrets.DOCKER_USERNAME}}'/server-client-pep:latest . 
      
    - name: Login to docker
      if: github.ref == 'refs/heads/main'
      run: docker login --username '${{secrets.DOCKER_LOGIN}}' --password '${{secrets.DOCKER_PASSWORD}}'

    - name: Push the docker image
      if: github.ref == 'refs/heads/main'
      run: docker push '${{secrets.DOCKER_USERNAME}}'/server-client-pep:latest
    - name: Deploy with gh-pages
      if: github.ref == 'refs/heads/main'
      run: |
        git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        npm run deploy -- -u "github-actions-bot <support+actions@github.com>"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}